Hi person reading this!

This project is about basic string manipulation codes and techniques. They are done in Visual Basic, and their pseudocodes have also been created. The tasks are listed below, however they are also listed as a part of each code for convenience :). Cheers! 

Tasks:

1) Find if the the input string has all of the alpbhabets; capital or small alike.

2) Replace selected character with another.

3) Count and output the ASCII value of an entered character.

4) Find the character that appears most number of times in an entered string.

5) Find the count of vowels in an entered string. 

6) "Donuts"

Given a running count of a number of donuts, return a string in the form 'Number of donuts: <count>', where <count> is the number passed in. However, if the count is 10 or more, then use the word 'many' instead of the actual count. So, for example, donuts(5) returns 'Number of donuts: 5' and donuts(23) returns 'Number of donuts: many'

7) "both_ends"

Given a string 's', return a string made of the first 2 and the last 2 characters of the original string, so, for example, 'spring' yields 'spng'. However, if the string length is less than/equal to 4, return string the original string.

8) "fix_start"

Given a string 's', return a string where all occurences of its first character have been changed to '*', except do not change the first character itself. e.g. 'sass' yields 'sa**'. Assume that the string is length 1 or more.

9) "MixUp"

Given strings 'a' and 'b', return a single string with a and b separated by a space, except swap the first 2 characters of each string. e.g. 
'mix', pod' -> 'pox mid'
'dog', 'dinner' -> 'dig donner'
 Assume 'a' and 'b' are length 2 or more.

10) "verbing"

Given a string, if its length is at least 3, add 'ing' to its end. unless it already ends in 'ing', in which case add 'ly' instead. If the string length is less than 3, leave it unchanged. Return the resulting string.

11) "not_bad"

Given a string, find the first appearance of the substring 'not' and 'bad'. If the 'bad' follows the 'not', replace the whole 'not'...'bad' substring with 'good'. Return the resulting string. So 'This dinner is not that bad!' Outputs: This dinner is good!
